// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Novusnet.Infraestructura.AccesoDatos;

public partial class NovusnetPROContext : DbContext
{
    public NovusnetPROContext()
    {
    }

    public NovusnetPROContext(DbContextOptions<NovusnetPROContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<Empleado> Empleado { get; set; }

    public virtual DbSet<Logging> Logging { get; set; }

    public virtual DbSet<Material> Material { get; set; }

    public virtual DbSet<Orden_Material> Orden_Material { get; set; }

    public virtual DbSet<Orden_Trabajo> Orden_Trabajo { get; set; }

    public virtual DbSet<SServicio> Servicio { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=EJCF;Initial Catalog=NovusnetPRO;Integrated Security=True;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.pk_cliente).HasName("PK__Cliente__1B813E7096E4F750");

            entity.HasIndex(e => e.cli_cedula, "UQ__Cliente__B42D878BA543D461").IsUnique();

            entity.Property(e => e.cli_activo).HasDefaultValue(1);
            entity.Property(e => e.cli_apellido)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.cli_cedula)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.cli_direccion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.cli_email)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.cli_fecha_registro).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.cli_nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.cli_referencia_ubicacion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.cli_telefono)
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Empleado>(entity =>
        {
            entity.HasKey(e => e.pk_Empleado).HasName("PK__Empleado__CBD8BCCFFE8F91D9");

            entity.HasIndex(e => e.emp_cedula, "UQ__Empleado__9CE039AE545B7B89").IsUnique();

            entity.Property(e => e.emp_activo).HasDefaultValue(1);
            entity.Property(e => e.emp_apellido)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.emp_cedula)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.emp_direccion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.emp_email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.emp_fecha_registro).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.emp_nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.emp_roll)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.emp_telefono)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Logging>(entity =>
        {
            entity.HasKey(e => e.pk_logging).HasName("PK__Logging__6BC582D11174DD01");

            entity.Property(e => e.log_password)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.log_user)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);

            entity.HasOne(d => d.fk_EmpleadoNavigation).WithMany(p => p.Logging)
                .HasForeignKey(d => d.fk_Empleado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Logging__fk_Empl__3C69FB99");
        });

        modelBuilder.Entity<Material>(entity =>
        {
            entity.HasKey(e => e.pk_material).HasName("PK__Material__F6CF7429754937D9");

            entity.HasIndex(e => e.ma_codigo, "UQ__Material__E8EA9015ED3121D9").IsUnique();

            entity.Property(e => e.ma_codigo)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ma_descripcion).HasColumnType("text");
            entity.Property(e => e.ma_duracion)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.ma_nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ma_precio_unitario).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<Orden_Material>(entity =>
        {
            entity.HasKey(e => e.pk_orden_material).HasName("PK__Orden_Ma__A6A40916CCC4ED37");

            entity.Property(e => e.orma_codigo)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.orma_estado)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.orma_fecha_uso).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.orma_observaciones).HasColumnType("text");

            entity.HasOne(d => d.fk_materialNavigation).WithMany(p => p.Orden_Material)
                .HasForeignKey(d => d.fk_material)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orden_Mat__fk_ma__4F7CD00D");

            entity.HasOne(d => d.fk_orden_trabajoNavigation).WithMany(p => p.Orden_Material)
                .HasForeignKey(d => d.fk_orden_trabajo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orden_Mat__fk_or__5070F446");
        });

        modelBuilder.Entity<Orden_Trabajo>(entity =>
        {
            entity.HasKey(e => e.pk_orden_trabajo).HasName("PK__Orden_Tr__9E4001A122D853F6");

            entity.Property(e => e.otra_codigo)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.otra_descripcion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.otra_estado)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.otra_fecha_registro).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.otra_prioridad)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.otra_tiempo_estimado)
                .HasMaxLength(45)
                .IsUnicode(false);

            entity.HasOne(d => d.fk_EmpleadoNavigation).WithMany(p => p.Orden_Trabajo)
                .HasForeignKey(d => d.fk_Empleado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orden_Tra__fk_Em__47DBAE45");

            entity.HasOne(d => d.fk_servicioNavigation).WithMany(p => p.Orden_Trabajo)
                .HasForeignKey(d => d.fk_servicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orden_Tra__fk_se__48CFD27E");
        });

        modelBuilder.Entity<SServicio>(entity =>
        {
            entity.HasKey(e => e.pk_servicio).HasName("PK__Servicio__DB19714103B7E56B");

            entity.Property(e => e.ser_descripcion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ser_nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ser_precio).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.ser_tipo_factura)
                .HasMaxLength(45)
                .IsUnicode(false);

            entity.HasOne(d => d.fk_clienteNavigation).WithMany(p => p.Servicio)
                .HasForeignKey(d => d.fk_cliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Servicio__fk_cli__440B1D61");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}